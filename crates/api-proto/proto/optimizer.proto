syntax = "proto3";

package darwinx.optimizer;

import "backtest.proto";

message OptimizeRequest {
  int32 strategy_id = 1;
  map<string, ParameterRange> parameters = 2;
  string method = 3;
  string objective = 4;
  string dataset = 5;
}

message ParameterRange {
  oneof range {
    IntRange int_range = 1;
    FloatRange float_range = 2;
  }
}

message IntRange {
  int32 min = 1;
  int32 max = 2;
  int32 step = 3;
}

message FloatRange {
  double min = 1;
  double max = 2;
  double step = 3;
}

message OptimizeProgress {
  string job_id = 1;
  float progress = 2;
  int32 tested = 3;
  int32 total = 4;
  OptimizationResult best = 5;
}

message OptimizationResult {
  map<string, string> parameters = 1;
  double objective_value = 2;
  darwinx.backtest.BacktestResult backtest = 3;
}

message GetOptimizeResultRequest {
  string job_id = 1;
}

service OptimizerService {
  rpc Optimize(OptimizeRequest) returns (stream OptimizeProgress);
  rpc GetResult(GetOptimizeResultRequest) returns (OptimizationResult);
}
